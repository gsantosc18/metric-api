version: '3'
services:

  db:
    container_name: mysql
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'metric-app'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'root'
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - my-db:/var/lib/mysql
    networks:
      - dev-infra

  app:
    container_name: app
    build: 
      context: ../
      dockerfile: DockerFile
    environment:
      - OTEL_SERVICE_NAME=metrics-app
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_METRIC_EXPORT_INTERVAL=10000
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - OTEL_RESOURCE_ATTRIBUTES=service.name=metrics-app
      - DB_HOST=mysql
    ports:
      - 8080:8080
    networks:
      - dev-infra
    depends_on:
      - db
      - otel-collector
      - jaeger

  otel-collector:
    image: otel/opentelemetry-collector:0.67.0
    container_name: otel-collector
    restart: always
    command: ["--config=/etc/collector-config.yaml"]
    volumes:
      - ./opentelemetry/collector-config.yaml:/etc/collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "55679:55679" # zpages extension
      - "4317:4317"   # otlp receiver
    networks:
      - dev-infra
    depends_on:
      - jaeger

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:1.47
    ports:
      - 16686:16686
      - 14250:14250
    networks:
      - dev-infra

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    restart: unless-stopped
    networks:
      - dev-infra
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    depends_on:
      - otel-collector

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    networks:
      - dev-infra
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources
      - grafana_data:/var/lib/grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true

networks:
  dev-infra:
    external: true
    name: dev-infra
volumes:
  my-db:
  prometheus_data:
  grafana_data:
